[
    {
        "id": "a39a4057.2994",
        "type": "tab",
        "label": "GPIO"
    },
    {
        "id": "2aca2241.addfbe",
        "type": "tab",
        "label": "Ops"
    },
    {
        "id": "e907119b.094bb",
        "type": "tab",
        "label": "SWD"
    },
    {
        "id": "1602a0ad.66807f",
        "type": "tab",
        "label": "Cirlces"
    },
    {
        "id": "b6cd8abc.bda2e8",
        "type": "subflow",
        "name": "SWD",
        "info": "",
        "in": [
            {
                "x": 46,
                "y": 301,
                "wires": [
                    {
                        "id": "a846fbd3.5bb0b8"
                    },
                    {
                        "id": "3071e45.9ef601c"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 591,
                "y": 104,
                "wires": [
                    {
                        "id": "d24aa65d.caeb68",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "147f5c0a.48f124",
        "type": "swagger-doc",
        "z": "",
        "summary": "Toggle GPIO 26 (pin 37)",
        "description": "",
        "tags": "GPIO",
        "consumes": "",
        "produces": "",
        "parameters": [],
        "responses": {
            "200": {
                "description": "OK",
                "code": "200"
            }
        },
        "deprecated": false
    },
    {
        "id": "b333b199.a9108",
        "type": "swagger-doc",
        "z": "",
        "summary": "",
        "description": "",
        "tags": "z3r0",
        "consumes": "",
        "produces": "",
        "parameters": [],
        "responses": {
            "200": {
                "description": "OK"
            }
        },
        "deprecated": false
    },
    {
        "id": "deec8ee8.3329c",
        "type": "swagger-doc",
        "z": "",
        "summary": "",
        "description": "",
        "tags": "z3r0",
        "consumes": "",
        "produces": "",
        "parameters": [],
        "responses": {
            "200": {
                "description": "OK"
            }
        },
        "deprecated": false
    },
    {
        "id": "6cedbd68.79cc24",
        "type": "swagger-doc",
        "z": "",
        "summary": "",
        "description": "",
        "tags": "z3r0",
        "consumes": "",
        "produces": "",
        "parameters": [],
        "responses": {
            "200": {
                "description": "OK"
            }
        },
        "deprecated": false
    },
    {
        "id": "a27461b1.ede15",
        "type": "swagger-doc",
        "z": "",
        "summary": "Flash firmware using SWD",
        "description": "",
        "tags": "MCU",
        "consumes": "text/plain",
        "produces": "",
        "parameters": [
            {
                "name": "chip",
                "in": "path",
                "description": "Chip model",
                "required": true,
                "type": "string",
                "enum": [
                    "nrf51",
                    "lpc810"
                ]
            },
            {
                "name": "firmware",
                "in": "body",
                "description": "Base64",
                "required": true,
                "schema": {
                    "type": "object"
                }
            }
        ],
        "responses": {
            "200": {
                "description": "OK",
                "code": "200"
            }
        },
        "deprecated": false
    },
    {
        "id": "c2edd4bd.406af8",
        "type": "swagger-doc",
        "z": "",
        "summary": "",
        "description": "",
        "tags": "z3r0",
        "consumes": "",
        "produces": "",
        "parameters": [
            {
                "name": "service",
                "in": "path",
                "required": true,
                "type": "string",
                "enum": [
                    "c9",
                    "grafana",
                    "influxdb",
                    "notebook",
                    "radapi",
                    "telegraf"
                ]
            },
            {
                "name": "action",
                "in": "path",
                "required": true,
                "type": "string",
                "enum": [
                    "disable",
                    "enable",
                    "start",
                    "stop",
                    "restart"
                ]
            }
        ],
        "responses": {
            "200": {
                "description": "OK"
            }
        },
        "deprecated": false
    },
    {
        "id": "445ea181.1f2a6",
        "type": "swagger-doc",
        "z": "",
        "summary": "",
        "description": "",
        "tags": "z3r0",
        "consumes": "",
        "produces": "",
        "parameters": [
            {
                "name": "service",
                "in": "path",
                "required": true,
                "type": "string",
                "enum": [
                    "c9",
                    "grafana",
                    "influxdb",
                    "notebook",
                    "radapi",
                    "ssh",
                    "telegraf"
                ]
            }
        ],
        "responses": {
            "200": {
                "description": "OK"
            }
        },
        "deprecated": false
    },
    {
        "id": "8e6f16ff.740788",
        "type": "swagger-doc",
        "z": "",
        "summary": "",
        "description": "",
        "tags": "",
        "consumes": "",
        "produces": "application/json",
        "parameters": [],
        "responses": {
            "200": {
                "description": "OK"
            }
        },
        "deprecated": false
    },
    {
        "id": "b226f9aa.19ac38",
        "type": "http in",
        "z": "a39a4057.2994",
        "name": "",
        "url": "/toggle/37",
        "method": "post",
        "swaggerDoc": "147f5c0a.48f124",
        "x": 123,
        "y": 88,
        "wires": [
            [
                "8ceed1f0.abe03"
            ]
        ]
    },
    {
        "id": "8ceed1f0.abe03",
        "type": "function",
        "z": "a39a4057.2994",
        "name": "toggle",
        "func": "context.global.P37 = context.global.P37 ? 0 : 1;\nmsg.payload = context.global.P37;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 310.5,
        "y": 88,
        "wires": [
            [
                "a8db2be1.9a1d08",
                "42c0b744.421c48"
            ]
        ]
    },
    {
        "id": "a8db2be1.9a1d08",
        "type": "http response",
        "z": "a39a4057.2994",
        "name": "OK",
        "x": 454.5,
        "y": 127,
        "wires": []
    },
    {
        "id": "42c0b744.421c48",
        "type": "rpi-gpio out",
        "z": "a39a4057.2994",
        "name": "37",
        "pin": "37",
        "set": false,
        "level": "0",
        "out": "out",
        "x": 453.5,
        "y": 57,
        "wires": []
    },
    {
        "id": "dc83b440.ca6d48",
        "type": "http response",
        "z": "2aca2241.addfbe",
        "name": "OK",
        "x": 654.5,
        "y": 319,
        "wires": []
    },
    {
        "id": "cad6dd3c.aa16f",
        "type": "exec",
        "z": "2aca2241.addfbe",
        "command": "sudo shutdown",
        "addpay": false,
        "append": "now",
        "useSpawn": "",
        "timer": "",
        "name": "",
        "x": 364.5,
        "y": 38.5,
        "wires": [
            [
                "dc83b440.ca6d48",
                "b43f7523.6fe2c8"
            ],
            [
                "b43f7523.6fe2c8"
            ],
            [
                "b43f7523.6fe2c8"
            ]
        ]
    },
    {
        "id": "680f5103.61ebc",
        "type": "http in",
        "z": "2aca2241.addfbe",
        "name": "",
        "url": "/shutdown",
        "method": "post",
        "swaggerDoc": "b333b199.a9108",
        "x": 138.5,
        "y": 38,
        "wires": [
            [
                "cad6dd3c.aa16f"
            ]
        ]
    },
    {
        "id": "82634756.4dd898",
        "type": "http in",
        "z": "2aca2241.addfbe",
        "name": "",
        "url": "/reboot",
        "method": "post",
        "swaggerDoc": "deec8ee8.3329c",
        "x": 128.5,
        "y": 98,
        "wires": [
            [
                "ea59505a.21171"
            ]
        ]
    },
    {
        "id": "ea59505a.21171",
        "type": "exec",
        "z": "2aca2241.addfbe",
        "command": "sudo reboot",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "",
        "x": 354.5,
        "y": 97.5,
        "wires": [
            [
                "b43f7523.6fe2c8",
                "dc83b440.ca6d48"
            ],
            [
                "b43f7523.6fe2c8"
            ],
            [
                "b43f7523.6fe2c8"
            ]
        ]
    },
    {
        "id": "d24aa65d.caeb68",
        "type": "exec",
        "z": "b6cd8abc.bda2e8",
        "command": "cd /tmp/openocd/ && sudo openocd",
        "addpay": false,
        "append": "",
        "useSpawn": false,
        "timer": "",
        "name": "openocd",
        "x": 462,
        "y": 117,
        "wires": [
            [
                "87d47d0b.d77aa"
            ],
            [
                "87d47d0b.d77aa"
            ],
            [
                "87d47d0b.d77aa"
            ]
        ]
    },
    {
        "id": "4f674346.4d688c",
        "type": "template",
        "z": "b6cd8abc.bda2e8",
        "name": "programmer",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "interface bcm2835gpio\nbcm2835gpio_peripheral_base {{bcm2835gpio_peripheral_base}}\n\n# Transition delay calculation: SPEED_COEFF/khz - SPEED_OFFSET\n# These depend on system clock, calibrated for stock 700MHz\n# bcm2835gpio_speed SPEED_COEFF SPEED_OFFSET\nbcm2835gpio_speed_coeffs 146203 36\n\n# bcm2835gpio_swd_nums SWDCLK SWDIO\nbcm2835gpio_swd_nums 25 24\n\n# bcm2835gpio_srst_num RST\nbcm2835gpio_srst_num 18\n",
        "x": 304.5,
        "y": 300.5,
        "wires": [
            [
                "990bf281.37c6d"
            ]
        ]
    },
    {
        "id": "990bf281.37c6d",
        "type": "file",
        "z": "b6cd8abc.bda2e8",
        "name": "",
        "filename": "/tmp/openocd/programmer.cfg",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "x": 534.5,
        "y": 300.5,
        "wires": []
    },
    {
        "id": "97eb08ab.2161d8",
        "type": "http in",
        "z": "2aca2241.addfbe",
        "name": "",
        "url": "/apt/upgrade",
        "method": "post",
        "swaggerDoc": "6cedbd68.79cc24",
        "x": 139.5,
        "y": 157,
        "wires": [
            [
                "491435e4.7dcedc"
            ]
        ]
    },
    {
        "id": "491435e4.7dcedc",
        "type": "exec",
        "z": "2aca2241.addfbe",
        "command": "sudo apt-get update && sudo apt-get -y upgrade",
        "addpay": false,
        "append": "",
        "useSpawn": false,
        "timer": "",
        "name": "",
        "x": 475.5,
        "y": 156.5,
        "wires": [
            [
                "dc83b440.ca6d48",
                "b43f7523.6fe2c8"
            ],
            [
                "b43f7523.6fe2c8"
            ],
            [
                "b43f7523.6fe2c8"
            ]
        ]
    },
    {
        "id": "b43f7523.6fe2c8",
        "type": "debug",
        "z": "2aca2241.addfbe",
        "name": "log",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 416.5,
        "y": 318,
        "wires": []
    },
    {
        "id": "3071e45.9ef601c",
        "type": "exec",
        "z": "b6cd8abc.bda2e8",
        "command": "sudo kill -9 `ps -ef | grep openocd | grep -v grep | awk '{ print $2 }'`",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "killopenocd",
        "x": 134.5,
        "y": 129.5,
        "wires": [
            [
                "97c33d09.3591f"
            ],
            [],
            []
        ]
    },
    {
        "id": "a846fbd3.5bb0b8",
        "type": "exec",
        "z": "b6cd8abc.bda2e8",
        "command": "hexdump -s4 -n4 -e '\"0x\" 4/1 \"%02X\"\"\\n\"\" \"' /proc/device-tree/soc/ranges",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "bcm2835gpio_peripheral_base",
        "x": 241,
        "y": 206.5,
        "wires": [
            [
                "9f1607f5.7b10c8"
            ],
            [],
            []
        ]
    },
    {
        "id": "9f1607f5.7b10c8",
        "type": "function",
        "z": "b6cd8abc.bda2e8",
        "name": "msg",
        "func": "const bcm2835gpio_peripheral_base = msg.payload.replace('\\n', '');\nmsg = {\n    bcm2835gpio_peripheral_base: bcm2835gpio_peripheral_base\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 446,
        "y": 193,
        "wires": [
            [
                "4f674346.4d688c"
            ]
        ]
    },
    {
        "id": "97c33d09.3591f",
        "type": "delay",
        "z": "b6cd8abc.bda2e8",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 301,
        "y": 117,
        "wires": [
            [
                "d24aa65d.caeb68"
            ]
        ]
    },
    {
        "id": "c5095ac4.c784e8",
        "type": "http response",
        "z": "e907119b.094bb",
        "name": "OK",
        "x": 569,
        "y": 121,
        "wires": []
    },
    {
        "id": "331e1ef8.211232",
        "type": "function",
        "z": "e907119b.094bb",
        "name": "decode",
        "func": "context.global.firmware = msg.payload ? Buffer.from(msg.payload, 'base64') : context.global.firmware;\nmsg.payload = context.global.firmware;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 396.5,
        "y": 172,
        "wires": [
            [
                "65e09c49.406c94"
            ]
        ]
    },
    {
        "id": "65e09c49.406c94",
        "type": "file",
        "z": "e907119b.094bb",
        "name": "",
        "filename": "/tmp/openocd/firmware.hex",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "x": 610.5,
        "y": 172,
        "wires": []
    },
    {
        "id": "d53a7139.5095a",
        "type": "subflow:b6cd8abc.bda2e8",
        "z": "e907119b.094bb",
        "x": 461.5,
        "y": 56,
        "wires": [
            [
                "c5095ac4.c784e8"
            ]
        ]
    },
    {
        "id": "73d2c75a.b5bcf8",
        "type": "http in",
        "z": "e907119b.094bb",
        "name": "",
        "url": "/swd/flash/:chip",
        "method": "post",
        "swaggerDoc": "a27461b1.ede15",
        "x": 158.5,
        "y": 85,
        "wires": [
            [
                "d53a7139.5095a",
                "331e1ef8.211232",
                "665f80dd.3bf42"
            ]
        ]
    },
    {
        "id": "665f80dd.3bf42",
        "type": "switch",
        "z": "e907119b.094bb",
        "name": "",
        "property": "req.params.chip",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "nrf51",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "lpc810",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "outputs": 2,
        "x": 183,
        "y": 257,
        "wires": [
            [
                "b5cf3381.8f30b"
            ],
            [
                "79044996.395ac8"
            ]
        ]
    },
    {
        "id": "b5cf3381.8f30b",
        "type": "template",
        "z": "e907119b.094bb",
        "name": "nrf51822",
        "field": "payload",
        "fieldType": "msg",
        "format": "text",
        "syntax": "plain",
        "template": "source programmer.cfg\ntransport select swd\n\nset WORKAREASIZE 0\nset CHIPNAME nrf51822\nsource [find target/nrf51.cfg]\nreset_config srst_only srst_nogate\nadapter_nsrst_delay 100\nadapter_nsrst_assert_width 100\n\ninit\nhalt\nnrf51 mass_erase\nflash write_image firmware.hex\nverify_image firmware.hex\nshutdown\n",
        "x": 347,
        "y": 236,
        "wires": [
            [
                "d2858706.fb8c08"
            ]
        ]
    },
    {
        "id": "d2858706.fb8c08",
        "type": "file",
        "z": "e907119b.094bb",
        "name": "",
        "filename": "/tmp/openocd/openocd.cfg",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "x": 608,
        "y": 258,
        "wires": []
    },
    {
        "id": "79044996.395ac8",
        "type": "template",
        "z": "e907119b.094bb",
        "name": "lpc810",
        "field": "payload",
        "fieldType": "msg",
        "format": "text",
        "syntax": "plain",
        "template": "source programmer.cfg\ntransport select swd\n\nset CHIPNAME lpc810\nsource [find target/lpc8xx.cfg]\nreset_config srst_only srst_pull_up\n \ninit\ntargets\nreset halt\n",
        "x": 337,
        "y": 281,
        "wires": [
            [
                "d2858706.fb8c08"
            ]
        ]
    },
    {
        "id": "87d47d0b.d77aa",
        "type": "debug",
        "z": "b6cd8abc.bda2e8",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 698,
        "y": 178,
        "wires": []
    },
    {
        "id": "70bb0be6.f0a034",
        "type": "http in",
        "z": "2aca2241.addfbe",
        "name": "",
        "url": "/systemctl/:action/:service",
        "method": "post",
        "swaggerDoc": "c2edd4bd.406af8",
        "x": 198,
        "y": 219.20001220703125,
        "wires": [
            [
                "ed92d208.8d6cf"
            ]
        ]
    },
    {
        "id": "4de153f9.f7c2fc",
        "type": "exec",
        "z": "2aca2241.addfbe",
        "command": "sudo systemctl  ",
        "addpay": true,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "",
        "x": 185.70000457763672,
        "y": 412.1000099182129,
        "wires": [
            [
                "b43f7523.6fe2c8",
                "dc83b440.ca6d48"
            ],
            [
                "b43f7523.6fe2c8"
            ],
            [
                "b43f7523.6fe2c8"
            ]
        ]
    },
    {
        "id": "ed92d208.8d6cf",
        "type": "function",
        "z": "2aca2241.addfbe",
        "name": "",
        "func": "let action = msg.req.params.action;\nlet service = msg.req.params.service;\n\nlet _ = context.global._;\n\nif (_.contains([\n       \"c9\",\n       \"grafana\",\n       \"influxdb\",\n       \"notebook\",\n       \"radapi\",\n       \"telegraf\"\n   ], service) && _.contains([\n       \"disable\",\n       \"enable\",\n       \"start\",\n       \"stop\",\n       \"restart\"\n   ], action)) {\n    msg.payload = `${action} ${service}`\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 170.5,
        "y": 323.8000183105469,
        "wires": [
            [
                "4de153f9.f7c2fc"
            ]
        ]
    },
    {
        "id": "d715099.1b5d4f8",
        "type": "http in",
        "z": "2aca2241.addfbe",
        "name": "",
        "url": "/systemctl/status/:service",
        "method": "get",
        "swaggerDoc": "445ea181.1f2a6",
        "x": 176.5,
        "y": 597,
        "wires": [
            [
                "de02acb7.bc5e5"
            ]
        ]
    },
    {
        "id": "de02acb7.bc5e5",
        "type": "function",
        "z": "2aca2241.addfbe",
        "name": "",
        "func": "let service = msg.req.params.service;\n\nlet _ = context.global._;\n\nif (_.contains([\n       \"c9\",\n       \"grafana\",\n       \"influxdb\",\n       \"notebook\",\n       \"radapi\",\n       \"ssh\",\n       \"telegraf\"\n   ], service)) {\n    msg.payload = `status ${service}`\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 120.5,
        "y": 501,
        "wires": [
            [
                "4de153f9.f7c2fc"
            ]
        ]
    },
    {
        "id": "71db7295.2729ac",
        "type": "http in",
        "z": "1602a0ad.66807f",
        "name": "",
        "url": "/circles",
        "method": "get",
        "swaggerDoc": "8e6f16ff.740788",
        "x": 143.5,
        "y": 68,
        "wires": [
            [
                "d73ef67f.849578"
            ]
        ]
    },
    {
        "id": "1722b50.768014b",
        "type": "http response",
        "z": "1602a0ad.66807f",
        "name": "",
        "x": 401.5,
        "y": 86,
        "wires": []
    },
    {
        "id": "d73ef67f.849578",
        "type": "function",
        "z": "1602a0ad.66807f",
        "name": "",
        "func": "msg.payload = [\n    { x: 10, y: 100, r: 10, value: \"#f00\" },\n    { x: 60, y: 60, r: 20, value: \"#00f\" },\n    { x: 90, y: 90, r: 30, value: \"#0f0\" }\n];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 281.5,
        "y": 158,
        "wires": [
            [
                "1722b50.768014b"
            ]
        ]
    }
]
